{"version":3,"sources":["../../src/models/user.model.js"],"names":["UserSchema","Schema","id","type","String","unique","isRequired","index","username","required","validator","arguments","password","validate","v","isModified","isLength","min","message","sex","enum","address","email","passIfEmpty","salt","timestamps","versionKey","virtual","get","_id","module","exports","model"],"mappings":";;AAGA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,aAAa,IAAI,mBAASC,MAAb,CAAoB;AACnCC,QAAG;AACCC,cAAKC,MADN;AAECC,gBAAO,IAFR;AAGCC,oBAAW,IAHZ;AAICC,eAAM,EAACF,QAAO,IAAR;AAJP,KADgC;AAOnCG,cAAS;AACLL,cAAKC,MADA;AAELC,gBAAO,IAFF;AAGLI,kBAAS,IAHJ;AAILC,mBAAU,iCAAS;AACfA,uBAAW,UADI;AAEfC,uBAAW,CAAC,CAAD,EAAI,EAAJ;AAFI,SAAT,CAJL;AAQLJ,eAAO,EAAEF,QAAQ,IAAV;AARF,KAP0B;AAiBnCO,cAAS;AACLT,cAAKC,MADA;AAELK,kBAAS,IAFJ;AAGLI,kBAAU;AACNH,qBADM,qBACII,CADJ,EACO;AACT,oBAAI,KAAKC,UAAL,CAAgB,UAAhB,CAAJ,EAAiC;AAC7B,2BAAO,oBAAUC,QAAV,CAAmBF,CAAnB,EAAsB,EAACG,KAAK,CAAN,EAAtB,CAAP;AACH;AACD,uBAAO,IAAP;AACH,aANK;;AAONC,qBAAS;AAPH;AAHL,KAjB0B;AA8BnCC,SAAK;AACDhB,cAAMC,MADL;AAEDgB,cAAM,CAAC,GAAD,EAAM,GAAN;AAFL,KA9B8B;AAkCnCC,aAAS;AACLlB,cAAMC,MADD;AAELS,kBAAU,iCAAS,EAAEH,WAAW,UAAb,EAAyBC,WAAW,CAAC,CAAD,EAAI,GAAJ,CAApC,EAAT;AAFL,KAlC0B;AAsCnCW,WAAO;AACHnB,cAAMC,MADH;AAEHS,kBAAU,iCAAS,EAAEH,WAAW,SAAb,EAAwBa,aAAa,IAArC,EAAT;AAFP,KAtC4B;AA0CnCC,UAAMpB;AA1C6B,CAApB,EA2ChB;AACCqB,gBAAY,IADb;AAECC,gBAAY;AAFb,CA3CgB,CAAnB,C,CAPA;;;;;AAuDA1B,WACK2B,OADL,CACa,SADb,EAEKC,GAFL,CAES,YAAY;AACb,WAAO;AACHC,aAAK,KAAK3B,EADP;AAEHM,kBAAU,KAAKA,QAFZ;AAGHW,aAAK,KAAKA,GAHP;AAIHG,eAAO,KAAKA,KAJT;AAKHD,iBAAS,KAAKA;AALX,KAAP;AAOH,CAVL;;AAYArB,WACK2B,OADL,CACa,MADb,EAEKC,GAFL,CAES,YAAY;AACb,WAAO;AACHC,aAAK,KAAK3B,EADP;AAEHM,kBAAU,KAAKA;AAFZ,KAAP;AAIH,CAPL;;AASAsB,OAAOC,OAAP,GAAiB,mBAASC,KAAT,CAAe,MAAf,EAAuBhC,UAAvB,CAAjB","file":"user.model.js","sourcesContent":["/**\n * Created by chen on 17-8-22.\n */\nimport mongoose from 'mongoose';\nimport validate from 'mongoose-validator';\nimport validator from 'validator';\n\nconst UserSchema = new mongoose.Schema({\n    id:{\n        type:String,\n        unique:true,\n        isRequired:true,\n        index:{unique:true}\n    },\n    username:{\n        type:String,\n        unique:true,\n        required:true,\n        validator:validate({\n            validator: 'isLength',\n            arguments: [2, 15],\n        }),\n        index: { unique: true },\n    },\n    password:{\n        type:String,\n        required:true,\n        validate: {\n            validator(v) {\n                if (this.isModified('password')) {\n                    return validator.isLength(v, {min: 6});\n                }\n                return true;\n            },\n            message: '密码至少为６位',\n        }\n    },\n    sex: {\n        type: String,\n        enum: ['M', 'F'],\n    },\n    address: {\n        type: String,\n        validate: validate({ validator: 'isLength', arguments: [0, 128] }),\n    },\n    email: {\n        type: String,\n        validate: validate({ validator: 'isEmail', passIfEmpty: true }),\n    },\n    salt: String,\n}, {\n    timestamps: true,\n    versionKey: false,\n});\n\nUserSchema\n    .virtual('profile')\n    .get(function () {\n        return {\n            _id: this.id,\n            username: this.username,\n            sex: this.sex,\n            email: this.email,\n            address: this.address,\n        };\n    });\n\nUserSchema\n    .virtual('info')\n    .get(function () {\n        return {\n            _id: this.id,\n            username: this.username,\n        };\n    });\n\nmodule.exports = mongoose.model('User', UserSchema);"]}